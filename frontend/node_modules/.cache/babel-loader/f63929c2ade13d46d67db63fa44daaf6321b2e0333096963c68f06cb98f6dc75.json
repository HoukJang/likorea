{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getBoards } from '../api/boards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardList() {\n  _s();\n  console.log(\"BoardList 컴포넌트 마운트\");\n  const {\n    boardType\n  } = useParams();\n  console.log(\"useParams boardType:\", boardType);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    console.log(\"useEffect 실행 - boardType:\", boardType);\n    const fetchPosts = async () => {\n      try {\n        const data = await getBoards(boardType);\n        console.log(\"게시글 fetch 성공, data:\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"게시글 목록 조회 오류:\", error);\n      }\n    };\n    fetchPosts();\n  }, [boardType]);\n  console.log(\"BoardList 렌더링 - posts 길이:\", posts.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [boardType === \"general\" ? \"asdasd\" : boardType, \" \\uAC8C\\uC2DC\\uD310\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/boards/${boardType}/new`,\n        className: \"write-btn\",\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/boards/${boardType}/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardList, \"Vtxm+i+AA1iDybhdaXoykmoYuW4=\", false, function () {\n  return [useParams];\n});\n_c = BoardList;\nexport default BoardList;\nvar _c;\n$RefreshReg$(_c, \"BoardList\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","getBoards","jsxDEV","_jsxDEV","BoardList","_s","console","log","boardType","posts","setPosts","fetchPosts","data","error","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","map","post","id","title","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { getBoards } from '../api/boards';\n\nfunction BoardList() {\n  console.log(\"BoardList 컴포넌트 마운트\");\n  const { boardType } = useParams();\n  console.log(\"useParams boardType:\", boardType);\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    console.log(\"useEffect 실행 - boardType:\", boardType);\n    const fetchPosts = async () => {\n      try {\n        const data = await getBoards(boardType);\n        console.log(\"게시글 fetch 성공, data:\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"게시글 목록 조회 오류:\", error);\n      }\n    };\n    fetchPosts();\n  }, [boardType]);\n\n  console.log(\"BoardList 렌더링 - posts 길이:\", posts.length);\n\n  return (\n    <div>\n      <header className=\"page-header\">\n        <h1>{boardType === \"general\" ? \"asdasd\" : boardType} 게시판</h1>\n      </header>\n      <div>\n        <Link to={`/boards/${boardType}/new`} className=\"write-btn\">글쓰기</Link>\n      </div>\n      {posts.length === 0 ? (\n        <p>게시글이 없습니다.</p>\n      ) : (\n        <ul>\n          {posts.map(post => (\n            <li key={post.id}>\n              <Link to={`/boards/${boardType}/${post.id}`}>{post.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default BoardList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}