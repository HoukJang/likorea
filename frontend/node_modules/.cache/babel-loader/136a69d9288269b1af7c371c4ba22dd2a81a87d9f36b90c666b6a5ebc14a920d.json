{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardEditForm.jsx\",\n  _s = $RefreshSig$();\n// src/components/BoardEditForm.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BACKEND_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardEditForm() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState('');\n  const [post, setPost] = useState(null);\n  const currentUser = {\n    username: 'currentUser'\n  }; // Dummy current user; replace with real authentication info\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n        if (!response.ok) throw new Error('게시글 조회 실패');\n        const data = await response.json();\n        setPost(data);\n        setTitle(data.title);\n        setContent(data.content);\n      } catch (error) {\n        setMessage(error.message);\n      }\n    };\n    fetchPost();\n  }, [boardType, postId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!localStorage.getItem('authToken')) {\n      setMessage('로그인 후 수정이 가능합니다.');\n      return;\n    }\n    // Only allow edit if the current user is the author\n    if (post && post.author !== currentUser.username) {\n      setMessage('자신의 게시글만 수정할 수 있습니다.');\n      return;\n    }\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      if (!response.ok) throw new Error('게시글 수정 실패');\n      setMessage('게시글이 수정되었습니다.');\n      navigate(`/boards/${boardType}/${postId}`);\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [boardType, \" \\uAC8C\\uC2DC\\uD310 - \\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), post ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardEditForm, \"NqGr5p8K9wsrv24BGWQXnDKwfz0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardEditForm;\nexport default BoardEditForm;\nvar _c;\n$RefreshReg$(_c, \"BoardEditForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","BACKEND_URL","jsxDEV","_jsxDEV","BoardEditForm","_s","boardType","postId","navigate","title","setTitle","content","setContent","message","setMessage","post","setPost","currentUser","username","fetchPost","response","fetch","ok","Error","data","json","error","handleSubmit","e","preventDefault","localStorage","getItem","author","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardEditForm.jsx"],"sourcesContent":["// src/components/BoardEditForm.jsx\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { BACKEND_URL } from '../config';\n\nfunction BoardEditForm() {\n  const { boardType, postId } = useParams();\n  const navigate = useNavigate();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [message, setMessage] = useState('');\n  const [post, setPost] = useState(null);\n  const currentUser = { username: 'currentUser' }; // Dummy current user; replace with real authentication info\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n        if (!response.ok) throw new Error('게시글 조회 실패');\n        const data = await response.json();\n        setPost(data);\n        setTitle(data.title);\n        setContent(data.content);\n      } catch(error) {\n        setMessage(error.message);\n      }\n    };\n    fetchPost();\n  }, [boardType, postId]);\n\n  const handleSubmit = async(e) => {\n    e.preventDefault();\n    if (!localStorage.getItem('authToken')) {\n      setMessage('로그인 후 수정이 가능합니다.');\n      return;\n    }\n    // Only allow edit if the current user is the author\n    if (post && post.author !== currentUser.username) {\n      setMessage('자신의 게시글만 수정할 수 있습니다.');\n      return;\n    }\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ title, content })\n      });\n      if (!response.ok) throw new Error('게시글 수정 실패');\n      setMessage('게시글이 수정되었습니다.');\n      navigate(`/boards/${boardType}/${postId}`);\n    } catch(error) {\n      setMessage(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{boardType} 게시판 - 게시글 수정</h2>\n      {post ? (\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label>제목:</label>\n            <input \n              type=\"text\" \n              value={title} \n              onChange={(e)=> setTitle(e.target.value)}\n              required \n            />\n          </div>\n          <div>\n            <label>내용:</label>\n            <textarea \n              value={content} \n              onChange={(e)=> setContent(e.target.value)}\n              required \n            />\n          </div>\n          <button type=\"submit\">게시글 수정</button>\n        </form>\n      ) : (\n        <p>게시글을 불러오는 중...</p>\n      )}\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default BoardEditForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}