{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser } from '../api/boards';\nimport '../styles/BoardPostView.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardPostView() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false); // 수정/삭제 권한 상태\n\n  useEffect(() => {\n    async function fetchPost() {\n      try {\n        const data = await getBoardPost(boardType, postId);\n        setPost(data);\n\n        // 게시글을 가져온 후 권한 검사 실행\n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n\n  // 권한 확인 함수 - 비동기로 수정\n  const checkEditDeletePermission = async postData => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n\n    // 작성자와 현재 로그인한 사용자가 같은 경우\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n\n    // 같은 사용자라면 바로 권한 부여\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    try {\n      // 작성자 정보 비동기로 가져오기\n      const authorData = await getUser(postData.author.id);\n      console.log(\"Original Author:\", authorData);\n\n      // 작성자의 권한 확인 (없으면 0으로 취급)\n      const authorAuthority = authorData && authorData.authority ? parseInt(authorData.authority) : 0;\n      console.log(\"Current User Authority:\", currentUserAuthority);\n      console.log(\"Original Author Authority:\", authorAuthority);\n\n      // 현재 사용자의 권한이 작성자보다 높을 때 수정/삭제 가능\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), canModify && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/boards/${boardType}/${postId}/edit`),\n          className: \"action-button edit-button\",\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"action-button\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-author\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC790:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \" \", post.author && post.author.id ? post.author.id : '알 수 없음']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), \" \", new Date(post.createdAt).toLocaleString(), post.updatedAt && post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-date\",\n          children: [\"(\\uC218\\uC815\\uC77C: \", new Date(post.updatedAt).toLocaleString(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-views\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC870\\uD68C\\uC218:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" \", post.viewCount || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"post-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"comment-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), post.comments && post.comments.length > 0 ? post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 18\n          }, this), \": \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), localStorage.getItem('authToken') ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uB313\\uAE00 \\uC791\\uC131...\",\n          className: \"comment-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"action-button\",\n          children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPostView, \"gS9rvlGajeYmSNd6/l7pZImSo3s=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardPostView;\nexport default BoardPostView;\nvar _c;\n$RefreshReg$(_c, \"BoardPostView\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","getBoardPost","deleteBoard","getUser","jsxDEV","_jsxDEV","BoardPostView","_s","boardType","postId","navigate","post","setPost","canModify","setCanModify","fetchPost","data","checkEditDeletePermission","error","console","postData","localStorage","getItem","currentUserId","currentUserAuthority","parseInt","isSameUser","author","id","authorData","log","authorAuthority","authority","handleDelete","window","confirm","userId","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onClick","Date","createdAt","toLocaleString","updatedAt","viewCount","dangerouslySetInnerHTML","__html","content","comments","length","map","comment","_id","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser } from '../api/boards';\nimport '../styles/BoardPostView.css'; // Import the CSS file\n\nfunction BoardPostView() {\n  const { boardType, postId } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false); // 수정/삭제 권한 상태\n\n  useEffect(() => {\n    async function fetchPost() {\n      try {\n        const data = await getBoardPost(boardType, postId);\n        setPost(data);\n        \n        // 게시글을 가져온 후 권한 검사 실행\n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n\n  // 권한 확인 함수 - 비동기로 수정\n  const checkEditDeletePermission = async (postData) => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    // 작성자와 현재 로그인한 사용자가 같은 경우\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    \n    // 같은 사용자라면 바로 권한 부여\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    \n    try {\n      // 작성자 정보 비동기로 가져오기\n      const authorData = await getUser(postData.author.id);\n      console.log(\"Original Author:\", authorData);\n      \n      // 작성자의 권한 확인 (없으면 0으로 취급)\n      const authorAuthority = authorData && authorData.authority ? \n        parseInt(authorData.authority) : 0;\n      \n      console.log(\"Current User Authority:\", currentUserAuthority);\n      console.log(\"Original Author Authority:\", authorAuthority);\n      \n      // 현재 사용자의 권한이 작성자보다 높을 때 수정/삭제 가능\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n\n  if (!post) return <p>Loading...</p>;\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <h1 className=\"post-title\">{post.title}</h1>\n        {canModify && (\n          <div>\n            <button \n              onClick={() => navigate(`/boards/${boardType}/${postId}/edit`)} \n              className=\"action-button edit-button\"\n            >\n              수정\n            </button>\n            <button \n              onClick={handleDelete}\n              className=\"action-button\"\n            >\n              삭제\n            </button>\n          </div>\n        )}\n      </div>\n      \n      {/* 작성자 정보와 날짜 정보 추가 */}\n      <div className=\"post-meta\">\n        <span className=\"post-author\">\n          <strong>작성자:</strong> {post.author && post.author.id ? post.author.id : '알 수 없음'}\n        </span>\n        <span className=\"post-date\">\n          <strong>작성일:</strong> {new Date(post.createdAt).toLocaleString()}\n          {post.updatedAt && post.updatedAt !== post.createdAt && (\n            <span className=\"update-date\"> \n              (수정일: {new Date(post.updatedAt).toLocaleString()})\n            </span>\n          )}\n        </span>\n        <span className=\"post-views\">\n          <strong>조회수:</strong> {post.viewCount || 0}\n        </span>\n      </div>\n      \n      <hr className=\"post-divider\" />\n\n      <div className=\"post-content\">\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\n      </div>\n\n      <div className=\"comment-section\">\n        <hr className=\"comment-divider\" />\n        \n        {post.comments && post.comments.length > 0 ? (\n          post.comments.map((comment) => (\n            <div key={comment._id} className=\"comment-item\">\n              <p><strong>{comment.author}</strong>: {comment.content}</p>\n            </div>\n          ))\n        ) : (\n          <p>댓글이 없습니다.</p>\n        )}\n        \n        {localStorage.getItem('authToken') ? (\n          <form className=\"comment-form\">\n            <textarea \n              placeholder=\"댓글 작성...\" \n              className=\"comment-textarea\"\n            />\n            <button type=\"submit\" className=\"action-button\">\n              댓글 달기\n            </button>\n          </form>\n        ) : (\n          <p className=\"login-message\">댓글을 작성하려면 로그인이 필요합니다.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BoardPostView;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,YAAY,EAAEC,WAAW,EAAEC,OAAO,QAAQ,eAAe;AAClE,OAAO,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;EACzC,MAAMU,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnDC,SAAS,CAAC,MAAM;IACd,eAAeiB,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMf,YAAY,CAACO,SAAS,EAAEC,MAAM,CAAC;QAClDG,OAAO,CAACI,IAAI,CAAC;;QAEb;QACAC,yBAAyB,CAACD,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACpC;IACF;IACAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACP,SAAS,EAAEC,MAAM,CAAC,CAAC;;EAEvB;EACA,MAAMQ,yBAAyB,GAAG,MAAOG,QAAQ,IAAK;IACpD,IAAI,CAACA,QAAQ,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;MACnDR,YAAY,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,MAAMS,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACpD,MAAME,oBAAoB,GAAGC,QAAQ,CAACJ,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC;;IAEnF;IACA,MAAMI,UAAU,GAAGN,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACO,MAAM,CAACC,EAAE,KAAKL,aAAa;;IAE1E;IACA,IAAIG,UAAU,EAAE;MACdZ,YAAY,CAAC,IAAI,CAAC;MAClB;IACF;IAEA,IAAI;MACF;MACA,MAAMe,UAAU,GAAG,MAAM1B,OAAO,CAACiB,QAAQ,CAACO,MAAM,CAACC,EAAE,CAAC;MACpDT,OAAO,CAACW,GAAG,CAAC,kBAAkB,EAAED,UAAU,CAAC;;MAE3C;MACA,MAAME,eAAe,GAAGF,UAAU,IAAIA,UAAU,CAACG,SAAS,GACxDP,QAAQ,CAACI,UAAU,CAACG,SAAS,CAAC,GAAG,CAAC;MAEpCb,OAAO,CAACW,GAAG,CAAC,yBAAyB,EAAEN,oBAAoB,CAAC;MAC5DL,OAAO,CAACW,GAAG,CAAC,4BAA4B,EAAEC,eAAe,CAAC;;MAE1D;MACAjB,YAAY,CAACU,oBAAoB,GAAGO,eAAe,CAAC;IACtD,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,EAAE;MAClC,IAAI;QACF,MAAMC,MAAM,GAAGf,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,MAAMpB,WAAW,CAACM,SAAS,EAAEC,MAAM,EAAE2B,MAAM,CAAC;QAC5C1B,QAAQ,CAAC,WAAWF,SAAS,EAAE,CAAC;MAClC,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;QAClCmB,KAAK,CAAC,wBAAwB,CAAC;MACjC;IACF;EACF,CAAC;EAED,IAAI,CAAC1B,IAAI,EAAE,oBAAON,OAAA;IAAAiC,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEnC,oBACErC,OAAA;IAAKsC,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7BjC,OAAA;MAAKsC,SAAS,EAAC,aAAa;MAAAL,QAAA,gBAC1BjC,OAAA;QAAIsC,SAAS,EAAC,YAAY;QAAAL,QAAA,EAAE3B,IAAI,CAACiC;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC3C7B,SAAS,iBACRR,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UACEwC,OAAO,EAAEA,CAAA,KAAMnC,QAAQ,CAAC,WAAWF,SAAS,IAAIC,MAAM,OAAO,CAAE;UAC/DkC,SAAS,EAAC,2BAA2B;UAAAL,QAAA,EACtC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrC,OAAA;UACEwC,OAAO,EAAEZ,YAAa;UACtBU,SAAS,EAAC,eAAe;UAAAL,QAAA,EAC1B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNrC,OAAA;MAAKsC,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBjC,OAAA;QAAMsC,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC3BjC,OAAA;UAAAiC,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,IAAI,CAACgB,MAAM,IAAIhB,IAAI,CAACgB,MAAM,CAACC,EAAE,GAAGjB,IAAI,CAACgB,MAAM,CAACC,EAAE,GAAG,QAAQ;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACPrC,OAAA;QAAMsC,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACzBjC,OAAA;UAAAiC,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC,IAAII,IAAI,CAACnC,IAAI,CAACoC,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAC/DrC,IAAI,CAACsC,SAAS,IAAItC,IAAI,CAACsC,SAAS,KAAKtC,IAAI,CAACoC,SAAS,iBAClD1C,OAAA;UAAMsC,SAAS,EAAC,aAAa;UAAAL,QAAA,GAAC,uBACtB,EAAC,IAAIQ,IAAI,CAACnC,IAAI,CAACsC,SAAS,CAAC,CAACD,cAAc,CAAC,CAAC,EAAC,GACnD;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACPrC,OAAA;QAAMsC,SAAS,EAAC,YAAY;QAAAL,QAAA,gBAC1BjC,OAAA;UAAAiC,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC/B,IAAI,CAACuC,SAAS,IAAI,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENrC,OAAA;MAAIsC,SAAS,EAAC;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE/BrC,OAAA;MAAKsC,SAAS,EAAC,cAAc;MAAAL,QAAA,eAC3BjC,OAAA;QAAK8C,uBAAuB,EAAE;UAAEC,MAAM,EAAEzC,IAAI,CAAC0C;QAAQ;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAENrC,OAAA;MAAKsC,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC9BjC,OAAA;QAAIsC,SAAS,EAAC;MAAiB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEjC/B,IAAI,CAAC2C,QAAQ,IAAI3C,IAAI,CAAC2C,QAAQ,CAACC,MAAM,GAAG,CAAC,GACxC5C,IAAI,CAAC2C,QAAQ,CAACE,GAAG,CAAEC,OAAO,iBACxBpD,OAAA;QAAuBsC,SAAS,EAAC,cAAc;QAAAL,QAAA,eAC7CjC,OAAA;UAAAiC,QAAA,gBAAGjC,OAAA;YAAAiC,QAAA,EAASmB,OAAO,CAAC9B;UAAM;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACe,OAAO,CAACJ,OAAO;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,GADnDe,OAAO,CAACC,GAAG;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACN,CAAC,gBAEFrC,OAAA;QAAAiC,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChB,EAEArB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,gBAChCjB,OAAA;QAAMsC,SAAS,EAAC,cAAc;QAAAL,QAAA,gBAC5BjC,OAAA;UACEsD,WAAW,EAAC,8BAAU;UACtBhB,SAAS,EAAC;QAAkB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFrC,OAAA;UAAQuD,IAAI,EAAC,QAAQ;UAACjB,SAAS,EAAC,eAAe;UAAAL,QAAA,EAAC;QAEhD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAEPrC,OAAA;QAAGsC,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CAtJQD,aAAa;EAAA,QACUN,SAAS,EACtBD,WAAW;AAAA;AAAA8D,EAAA,GAFrBvD,aAAa;AAwJtB,eAAeA,aAAa;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}