{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment, deleteComment, updateComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardPostView() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트, 게시글 불러오기 시작\");\n    async function fetchPost() {\n      setLoading(true);\n      try {\n        console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n        const data = await getBoardPost(boardType, postId);\n        console.log(\"게시글 데이터 응답:\", data);\n        setPost(data);\n        if (data.comments && Array.isArray(data.comments)) {\n          setComments(data.comments);\n          console.log(`댓글 ${data.comments.length}개 로드됨`);\n        }\n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n  const checkEditDeletePermission = async postData => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    try {\n      const authorData = await getUser(postData.author.id);\n      const authorAuthority = authorData && authorData.authority ? parseInt(authorData.authority) : 0;\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n  const canModifyComment = comment => {\n    if (!localStorage.getItem('authToken')) return false;\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    const commentAuthorId = comment.author.id || comment.author;\n    const commentAuthorAuthority = comment.author.authority || 0;\n    return commentAuthorId === currentUserId || currentUserAuthority > commentAuthorAuthority;\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      console.log(\"댓글 작성 응답:\", response);\n      if (response && response.comment) {\n        setComments(prev => [...prev, response.comment]);\n      } else {\n        const updatedPost = await getBoardPost(boardType, postId);\n        setPost(updatedPost);\n        setComments(updatedPost.comments || []);\n      }\n      setCommentText('');\n      alert('댓글이 성공적으로 작성되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditComment = comment => {\n    setEditingCommentId(comment.id || comment._id);\n    setEditCommentText(comment.content);\n  };\n  const handleCancelEditComment = () => {\n    setEditingCommentId(null);\n    setEditCommentText('');\n  };\n  const handleUpdateComment = async commentId => {\n    if (!editCommentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await updateComment(boardType, postId, commentId, {\n        content: editCommentText,\n        id: userId\n      });\n      const updatedPost = await getBoardPost(boardType, postId);\n      setComments(updatedPost.comments || []);\n      setEditingCommentId(null);\n      setEditCommentText('');\n      alert('댓글이 수정되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 수정 오류:\", error);\n      alert(`댓글 수정 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDeleteComment = async commentId => {\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await deleteComment(boardType, postId, commentId, userId);\n      setComments(comments.filter(c => (c.id || c._id) !== commentId));\n      alert('댓글이 삭제되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 삭제 오류:\", error);\n      alert(`댓글 삭제 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading && !post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 32\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), canModify && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/boards/${boardType}/${postId}/edit`),\n          className: \"action-button edit-button\",\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"action-button\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-author\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC790:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), \" \", post.author && post.author.id ? post.author.id : '알 수 없음']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), \" \", new Date(post.createdAt).toLocaleString(), post.updatedAt && post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-date\",\n          children: [\"(\\uC218\\uC815\\uC77C: \", new Date(post.updatedAt).toLocaleString(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-views\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC870\\uD68C\\uC218:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), \" \", post.viewCount || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"post-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uB313\\uAE00 (\", comments.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"comment-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments.map((comment, index) => {\n          const commentId = comment.id || comment._id || index;\n          const isEditing = editingCommentId === commentId;\n          const commentDate = new Date(comment.createdAt);\n          const authorId = comment.author && comment.author.id ? comment.author.id : typeof comment.author === 'string' ? comment.author : '익명';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-edit-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"comment-edit-textarea\",\n                value: editCommentText,\n                onChange: e => setEditCommentText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-edit-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateComment(commentId),\n                  disabled: loading,\n                  children: \"\\uC800\\uC7A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleCancelEditComment,\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-author-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-author-id\",\n                  children: authorId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-date\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: commentDate.toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: commentDate.toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-main\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-text\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 25\n                }, this), canModifyComment(comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"comment-action-btn\",\n                    onClick: () => handleEditComment(comment),\n                    children: \"\\uC218\\uC815\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"comment-action-btn\",\n                    onClick: () => handleDeleteComment(commentId),\n                    children: \"\\uC0AD\\uC81C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this)\n          }, commentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), localStorage.getItem('authToken') ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uB313\\uAE00 \\uC791\\uC131...\",\n          className: \"comment-textarea\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"action-button\",\n          disabled: loading,\n          children: loading ? '작성 중...' : '댓글 달기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPostView, \"hjMbWxx0y+o9On6aWFvlRtYtHeY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardPostView;\nexport default BoardPostView;\nvar _c;\n$RefreshReg$(_c, \"BoardPostView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","getBoardPost","deleteBoard","getUser","addComment","deleteComment","updateComment","jsxDEV","_jsxDEV","BoardPostView","_s","boardType","postId","navigate","post","setPost","canModify","setCanModify","commentText","setCommentText","loading","setLoading","error","setError","comments","setComments","editingCommentId","setEditingCommentId","editCommentText","setEditCommentText","console","log","fetchPost","data","Array","isArray","length","checkEditDeletePermission","message","postData","localStorage","getItem","currentUserId","currentUserAuthority","parseInt","isSameUser","author","id","authorData","authorAuthority","authority","handleDelete","window","confirm","userId","alert","canModifyComment","comment","commentAuthorId","commentAuthorAuthority","handleCommentSubmit","e","preventDefault","trim","content","response","prev","updatedPost","handleEditComment","_id","handleCancelEditComment","handleUpdateComment","commentId","handleDeleteComment","filter","c","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onClick","Date","createdAt","toLocaleString","updatedAt","viewCount","dangerouslySetInnerHTML","__html","map","index","isEditing","commentDate","authorId","value","onChange","target","disabled","toLocaleDateString","toLocaleTimeString","onSubmit","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment, deleteComment, updateComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\n\nfunction BoardPostView() {\n  const { boardType, postId } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트, 게시글 불러오기 시작\");\n    \n    async function fetchPost() {\n      setLoading(true);\n      try {\n        console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n        const data = await getBoardPost(boardType, postId);\n        console.log(\"게시글 데이터 응답:\", data);\n        setPost(data);\n        \n        if (data.comments && Array.isArray(data.comments)) {\n          setComments(data.comments);\n          console.log(`댓글 ${data.comments.length}개 로드됨`);\n        }\n        \n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n\n  const checkEditDeletePermission = async (postData) => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    \n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    \n    try {\n      const authorData = await getUser(postData.author.id);\n      const authorAuthority = authorData && authorData.authority ? \n        parseInt(authorData.authority) : 0;\n\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n\n  const canModifyComment = (comment) => {\n    if (!localStorage.getItem('authToken')) return false;\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    const commentAuthorId = comment.author.id || comment.author;\n    const commentAuthorAuthority = comment.author.authority || 0;\n    \n    return commentAuthorId === currentUserId || currentUserAuthority > commentAuthorAuthority;\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    \n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n\n    const userId = localStorage.getItem('userId');\n    \n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    \n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      \n      console.log(\"댓글 작성 응답:\", response);\n      \n      if (response && response.comment) {\n        setComments(prev => [...prev, response.comment]);\n      } else {\n        const updatedPost = await getBoardPost(boardType, postId);\n        setPost(updatedPost);\n        setComments(updatedPost.comments || []);\n      }\n      \n      setCommentText('');\n      \n      alert('댓글이 성공적으로 작성되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingCommentId(comment.id || comment._id);\n    setEditCommentText(comment.content);\n  };\n\n  const handleCancelEditComment = () => {\n    setEditingCommentId(null);\n    setEditCommentText('');\n  };\n\n  const handleUpdateComment = async (commentId) => {\n    if (!editCommentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await updateComment(boardType, postId, commentId, {\n        content: editCommentText,\n        id: userId\n      });\n      \n      const updatedPost = await getBoardPost(boardType, postId);\n      setComments(updatedPost.comments || []);\n      \n      setEditingCommentId(null);\n      setEditCommentText('');\n      \n      alert('댓글이 수정되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 수정 오류:\", error);\n      alert(`댓글 수정 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDeleteComment = async (commentId) => {\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\n    \n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await deleteComment(boardType, postId, commentId, userId);\n      \n      setComments(comments.filter(c => (c.id || c._id) !== commentId));\n      \n      alert('댓글이 삭제되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 삭제 오류:\", error);\n      alert(`댓글 삭제 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && !post) return <p>게시글을 불러오는 중...</p>;\n  if (error) return <p>오류 발생: {error}</p>;\n  if (!post) return <p>게시글을 찾을 수 없습니다</p>;\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <h1 className=\"post-title\">{post.title}</h1>\n        {canModify && (\n          <div className=\"post-actions\">\n            <button \n              onClick={() => navigate(`/boards/${boardType}/${postId}/edit`)} \n              className=\"action-button edit-button\"\n            >\n              수정\n            </button>\n            <button \n              onClick={handleDelete}\n              className=\"action-button\"\n            >\n              삭제\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"post-meta\">\n        <span className=\"post-author\">\n          <strong>작성자:</strong> {post.author && post.author.id ? post.author.id : '알 수 없음'}\n        </span>\n        <span className=\"post-date\">\n          <strong>작성일:</strong> {new Date(post.createdAt).toLocaleString()}\n          {post.updatedAt && post.updatedAt !== post.createdAt && (\n            <span className=\"update-date\"> \n              (수정일: {new Date(post.updatedAt).toLocaleString()})\n            </span>\n          )}\n        </span>\n        <span className=\"post-views\">\n          <strong>조회수:</strong> {post.viewCount || 0}\n        </span>\n      </div>\n      \n      <hr className=\"post-divider\" />\n\n      <div className=\"post-content\">\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\n      </div>\n\n      <div className=\"comment-section\">\n        <h3>댓글 ({comments.length})</h3>\n        <hr className=\"comment-divider\" />\n        \n        {comments.length > 0 ? (\n          <div className=\"comment-list\">\n            {comments.map((comment, index) => {\n              const commentId = comment.id || comment._id || index;\n              const isEditing = editingCommentId === commentId;\n              const commentDate = new Date(comment.createdAt);\n              \n              const authorId = comment.author && comment.author.id \n                ? comment.author.id \n                : (typeof comment.author === 'string' ? comment.author : '익명');\n              \n              return (\n                <div key={commentId} className=\"comment-item\">\n                  {isEditing ? (\n                    <div className=\"comment-edit-form\">\n                      <textarea\n                        className=\"comment-edit-textarea\"\n                        value={editCommentText}\n                        onChange={(e) => setEditCommentText(e.target.value)}\n                      />\n                      <div className=\"comment-edit-buttons\">\n                        <button onClick={() => handleUpdateComment(commentId)} disabled={loading}>저장</button>\n                        <button onClick={handleCancelEditComment}>취소</button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"comment-content-wrapper\">\n                      <div className=\"comment-author-info\">\n                        <div className=\"comment-author-id\">{authorId}</div>\n                        <div className=\"comment-date\">\n                          <div>{commentDate.toLocaleDateString()}</div>\n                          <div>{commentDate.toLocaleTimeString()}</div>\n                        </div>\n                      </div>\n                      <div className=\"comment-main\">\n                        <div className=\"comment-text\">{comment.content}</div>\n                        {canModifyComment(comment) && (\n                          <div className=\"comment-actions\">\n                            <button \n                              className=\"comment-action-btn\"\n                              onClick={() => handleEditComment(comment)}\n                            >\n                              수정\n                            </button>\n                            <button \n                              className=\"comment-action-btn\"\n                              onClick={() => handleDeleteComment(commentId)}\n                            >\n                              삭제\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"no-comments\">댓글이 없습니다.</p>\n        )}\n        \n        {localStorage.getItem('authToken') ? (\n          <form className=\"comment-form\" onSubmit={handleCommentSubmit}>\n            <textarea \n              placeholder=\"댓글 작성...\" \n              className=\"comment-textarea\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              disabled={loading}\n              required\n            />\n            <button \n              type=\"submit\" \n              className=\"action-button\"\n              disabled={loading}\n            >\n              {loading ? '작성 중...' : '댓글 달기'}\n            </button>\n          </form>\n        ) : (\n          <p className=\"login-message\">댓글을 작성하려면 로그인이 필요합니다.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BoardPostView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}