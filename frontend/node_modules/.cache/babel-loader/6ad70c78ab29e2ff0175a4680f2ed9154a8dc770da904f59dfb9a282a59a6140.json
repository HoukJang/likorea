{"ast":null,"code":"import { BACKEND_URL } from '../config';\nexport const getBoards = async boardType => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}`);\n  if (!response.ok) throw new Error(`게시글 목록 조회 실패: ${response.status}`);\n  return response.json();\n};\nexport const createBoard = async (boardType, boardData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(boardData)\n  });\n  if (!response.ok) throw new Error(`게시글 생성 실패: ${response.status}`);\n  return response.json();\n};\nexport const updateBoard = async (boardType, postId, boardData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(boardData)\n  });\n  if (!response.ok) throw new Error(`게시글 수정 실패: ${response.status}`);\n  return response.json();\n};\nexport const deleteBoard = async (boardType, postId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error(`게시글 삭제 실패: ${response.status}`);\n  return response.json();\n};\nexport const addComment = async (boardType, postId, commentData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(commentData)\n  });\n  if (!response.ok) throw new Error(`댓글 생성 실패: ${response.status}`);\n  return response.json();\n};\nexport const updateComment = async (boardType, postId, commentId, commentData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments/${commentId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(commentData)\n  });\n  if (!response.ok) throw new Error(`댓글 수정 실패: ${response.status}`);\n  return response.json();\n};\nexport const deleteComment = async (boardType, postId, commentId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments/${commentId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error(`댓글 삭제 실패: ${response.status}`);\n  return response.json();\n};\nexport const getBoardPost = async (boardType, postId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n  if (!response.ok) {\n    throw new Error(`게시글 조회 실패: ${response.statusText}`);\n  }\n  return await response.json();\n};","map":{"version":3,"names":["BACKEND_URL","getBoards","boardType","response","fetch","ok","Error","status","json","createBoard","boardData","method","headers","body","JSON","stringify","updateBoard","postId","deleteBoard","addComment","commentData","updateComment","commentId","deleteComment","getBoardPost","statusText"],"sources":["/Users/houkjang/likorea/frontend/src/api/boards.js"],"sourcesContent":["import { BACKEND_URL } from '../config';\n\nexport const getBoards = async (boardType) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}`);\n  if (!response.ok) throw new Error(`게시글 목록 조회 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const createBoard = async (boardType, boardData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(boardData)\n  });\n  if (!response.ok) throw new Error(`게시글 생성 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const updateBoard = async (boardType, postId, boardData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(boardData)\n  });\n  if (!response.ok) throw new Error(`게시글 수정 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const deleteBoard = async (boardType, postId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error(`게시글 삭제 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const addComment = async (boardType, postId, commentData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(commentData)\n  });\n  if (!response.ok) throw new Error(`댓글 생성 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const updateComment = async (boardType, postId, commentId, commentData) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments/${commentId}`, {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(commentData)\n  });\n  if (!response.ok) throw new Error(`댓글 수정 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const deleteComment = async (boardType, postId, commentId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments/${commentId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) throw new Error(`댓글 삭제 실패: ${response.status}`);\n  return response.json();\n};\n\nexport const getBoardPost = async (boardType, postId) => {\n  const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n  if (!response.ok) {\n    throw new Error(`게시글 조회 실패: ${response.statusText}`);\n  }\n  return await response.json();\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}