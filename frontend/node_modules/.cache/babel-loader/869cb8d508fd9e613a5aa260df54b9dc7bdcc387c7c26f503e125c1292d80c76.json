{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardPostForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardPostForm() {\n  _s();\n  const {\n    boardType\n  } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    title: '',\n    content: ''\n  });\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // 실제로는 로그인한 사용자의 ID를 사용하거나 토큰을 이용해 인증 후 author 정보를 자동으로 설정합니다.\n    const author = \"사용자ID_예시\";\n    try {\n      const res = await fetch(`http://localhost:5000/api/boards/${boardType}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...form,\n          author\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert('게시글 작성 성공!');\n        navigate(`/boards/${boardType}`);\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('게시글 작성 실패', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [boardType === 'free' ? '자유게시판' : '사고팔고 게시판', \" - \\uC0C8 \\uAE00 \\uC791\\uC131\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC81C\\uBAA9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: form.title,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0B4\\uC6A9:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"content\",\n          value: form.content,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPostForm, \"jP79fpdvT87yTcpCpI4xQ8iD2wo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardPostForm;\nexport default BoardPostForm;\nvar _c;\n$RefreshReg$(_c, \"BoardPostForm\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","BoardPostForm","_s","boardType","navigate","form","setForm","title","content","handleChange","e","target","name","value","handleSubmit","preventDefault","author","res","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardPostForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nfunction BoardPostForm() {\n  const { boardType } = useParams();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({ title: '', content: '' });\n\n  const handleChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // 실제로는 로그인한 사용자의 ID를 사용하거나 토큰을 이용해 인증 후 author 정보를 자동으로 설정합니다.\n    const author = \"사용자ID_예시\";\n    try {\n      const res = await fetch(`http://localhost:5000/api/boards/${boardType}`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ ...form, author })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        alert('게시글 작성 성공!');\n        navigate(`/boards/${boardType}`);\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('게시글 작성 실패', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>{boardType === 'free' ? '자유게시판' : '사고팔고 게시판'} - 새 글 작성</h2>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>제목:</label>\n          <input type=\"text\" name=\"title\" value={form.title} onChange={handleChange} required />\n        </div>\n        <div>\n          <label>내용:</label>\n          <textarea name=\"content\" value={form.content} onChange={handleChange} required />\n        </div>\n        <button type=\"submit\">등록</button>\n      </form>\n    </div>\n  );\n}\n\nexport default BoardPostForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}