{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment, deleteComment, updateComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardPostView() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // 게시글과 댓글을 함께 불러오는 함수\n  const fetchPostAndComments = async () => {\n    setLoading(true);\n    try {\n      console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n      const data = await getBoardPost(boardType, postId);\n      console.log(\"게시글 데이터 응답:\", data);\n      setPost(data);\n\n      // 댓글 데이터 설정\n      if (data.comments && Array.isArray(data.comments)) {\n        setComments(data.comments);\n        console.log(`댓글 ${data.comments.length}개 로드됨:`, data.comments);\n      } else {\n        console.log(\"댓글 없음 또는 배열 아님:\", data.comments);\n        setComments([]);\n      }\n\n      // 권한 확인\n      checkEditDeletePermission(data);\n    } catch (error) {\n      console.error(\"게시글 조회 오류:\", error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 또는 페이지 이동 시 데이터 로드\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트 또는 파라미터 변경\");\n    fetchPostAndComments();\n  }, [boardType, postId]);\n\n  // 필요할 때 데이터 새로고침\n  useEffect(() => {\n    if (isRefreshing) {\n      fetchPostAndComments();\n      setIsRefreshing(false);\n    }\n  }, [isRefreshing]);\n  const checkEditDeletePermission = async postData => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    try {\n      const authorData = await getUser(postData.author.id);\n      const authorAuthority = authorData && authorData.authority ? parseInt(authorData.authority) : 0;\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n  const canModifyComment = comment => {\n    if (!localStorage.getItem('authToken')) return false;\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    const commentAuthorId = comment.author.id || comment.author;\n    const commentAuthorAuthority = comment.author.authority || 0;\n    return commentAuthorId === currentUserId || currentUserAuthority > commentAuthorAuthority;\n  };\n\n  // 댓글 작성 핸들러 - 게시글 데이터도 함께 업데이트\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      console.log(\"댓글 작성 응답:\", response);\n\n      // 댓글 작성 성공 시 새 댓글을 추가하고 게시글 데이터도 업데이트\n      if (response && response.comment) {\n        const newComment = response.comment;\n\n        // comments 상태 업데이트\n        setComments(prevComments => [...prevComments, newComment]);\n\n        // post 상태의 comments 배열도 업데이트\n        setPost(prevPost => ({\n          ...prevPost,\n          comments: [...(prevPost.comments || []), newComment]\n        }));\n        setCommentText('');\n        alert('댓글이 성공적으로 작성되었습니다.');\n      } else {\n        // API 응답에 댓글 정보가 없는 경우 전체 데이터 다시 로드\n        setIsRefreshing(true);\n      }\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEditComment = comment => {\n    setEditingCommentId(comment.id || comment._id);\n    setEditCommentText(comment.content);\n  };\n  const handleCancelEditComment = () => {\n    setEditingCommentId(null);\n    setEditCommentText('');\n  };\n\n  // 댓글 수정 저장 - 게시글 데이터도 함께 업데이트\n  const handleUpdateComment = async commentId => {\n    if (!editCommentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      const response = await updateComment(boardType, postId, commentId, {\n        content: editCommentText,\n        id: userId\n      });\n      if (response && response.comment) {\n        const updatedComment = response.comment;\n\n        // comments 상태 업데이트\n        setComments(prevComments => prevComments.map(c => (c.id || c._id) === commentId ? updatedComment : c));\n\n        // post 상태의 comments 배열도 업데이트\n        setPost(prevPost => ({\n          ...prevPost,\n          comments: (prevPost.comments || []).map(c => (c.id || c._id) === commentId ? updatedComment : c)\n        }));\n      } else {\n        // API 응답에 댓글 정보가 없는 경우 전체 데이터 다시 로드\n        setIsRefreshing(true);\n      }\n      setEditingCommentId(null);\n      setEditCommentText('');\n      alert('댓글이 수정되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 수정 오류:\", error);\n      alert(`댓글 수정 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 댓글 삭제 - 게시글 데이터도 함께 업데이트\n  const handleDeleteComment = async commentId => {\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await deleteComment(boardType, postId, commentId, userId);\n\n      // comments 상태에서 삭제된 댓글 제거\n      setComments(prevComments => prevComments.filter(c => (c.id || c._id) !== commentId));\n\n      // post 상태의 comments 배열에서도 삭제된 댓글 제거\n      setPost(prevPost => ({\n        ...prevPost,\n        comments: (prevPost.comments || []).filter(c => (c.id || c._id) !== commentId)\n      }));\n      alert('댓글이 삭제되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 삭제 오류:\", error);\n      alert(`댓글 삭제 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading && !post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 32\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), canModify && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/boards/${boardType}/${postId}/edit`),\n          className: \"action-button edit-button\",\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"action-button\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-author\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC790:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), \" \", post.author && post.author.id ? post.author.id : '알 수 없음']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), \" \", new Date(post.createdAt).toLocaleString(), post.updatedAt && post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-date\",\n          children: [\"(\\uC218\\uC815\\uC77C: \", new Date(post.updatedAt).toLocaleString(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-views\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC870\\uD68C\\uC218:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), \" \", post.viewCount || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"post-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uB313\\uAE00 (\", comments.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"comment-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments.map((comment, index) => {\n          const commentId = comment.id || comment._id || index;\n          const isEditing = editingCommentId === commentId;\n          const commentDate = new Date(comment.createdAt);\n          const authorId = comment.author && comment.author.id ? comment.author.id : typeof comment.author === 'string' ? comment.author : '익명';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-edit-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"comment-edit-textarea\",\n                value: editCommentText,\n                onChange: e => setEditCommentText(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-edit-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateComment(commentId),\n                  disabled: loading,\n                  children: \"\\uC800\\uC7A5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleCancelEditComment,\n                  children: \"\\uCDE8\\uC18C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-content-wrapper\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-author-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-author-id\",\n                  children: authorId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-date\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: commentDate.toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: commentDate.toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 344,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment-main\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-text\",\n                  children: comment.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 25\n                }, this), canModifyComment(comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comment-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"comment-action-btn\",\n                    onClick: () => handleEditComment(comment),\n                    children: \"\\uC218\\uC815\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"comment-action-btn\",\n                    onClick: () => handleDeleteComment(commentId),\n                    children: \"\\uC0AD\\uC81C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 21\n            }, this)\n          }, commentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), localStorage.getItem('authToken') ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uB313\\uAE00 \\uC791\\uC131...\",\n          className: \"comment-textarea\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"action-button\",\n          disabled: loading,\n          children: loading ? '작성 중...' : '댓글 달기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPostView, \"1hAfit0ySohFxkZ3kpLGwlA7o9g=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardPostView;\nexport default BoardPostView;\nvar _c;\n$RefreshReg$(_c, \"BoardPostView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","getBoardPost","deleteBoard","getUser","addComment","deleteComment","updateComment","jsxDEV","_jsxDEV","BoardPostView","_s","boardType","postId","navigate","post","setPost","canModify","setCanModify","commentText","setCommentText","loading","setLoading","error","setError","comments","setComments","editingCommentId","setEditingCommentId","editCommentText","setEditCommentText","isRefreshing","setIsRefreshing","fetchPostAndComments","console","log","data","Array","isArray","length","checkEditDeletePermission","message","postData","localStorage","getItem","currentUserId","currentUserAuthority","parseInt","isSameUser","author","id","authorData","authorAuthority","authority","handleDelete","window","confirm","userId","alert","canModifyComment","comment","commentAuthorId","commentAuthorAuthority","handleCommentSubmit","e","preventDefault","trim","content","response","newComment","prevComments","prevPost","handleEditComment","_id","handleCancelEditComment","handleUpdateComment","commentId","updatedComment","map","c","handleDeleteComment","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onClick","Date","createdAt","toLocaleString","updatedAt","viewCount","dangerouslySetInnerHTML","__html","index","isEditing","commentDate","authorId","value","onChange","target","disabled","toLocaleDateString","toLocaleTimeString","onSubmit","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment, deleteComment, updateComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\n\nfunction BoardPostView() {\n  const { boardType, postId } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [editingCommentId, setEditingCommentId] = useState(null);\n  const [editCommentText, setEditCommentText] = useState('');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  // 게시글과 댓글을 함께 불러오는 함수\n  const fetchPostAndComments = async () => {\n    setLoading(true);\n    try {\n      console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n      const data = await getBoardPost(boardType, postId);\n      console.log(\"게시글 데이터 응답:\", data);\n      setPost(data);\n      \n      // 댓글 데이터 설정\n      if (data.comments && Array.isArray(data.comments)) {\n        setComments(data.comments);\n        console.log(`댓글 ${data.comments.length}개 로드됨:`, data.comments);\n      } else {\n        console.log(\"댓글 없음 또는 배열 아님:\", data.comments);\n        setComments([]);\n      }\n      \n      // 권한 확인\n      checkEditDeletePermission(data);\n    } catch (error) {\n      console.error(\"게시글 조회 오류:\", error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 컴포넌트 마운트 또는 페이지 이동 시 데이터 로드\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트 또는 파라미터 변경\");\n    fetchPostAndComments();\n  }, [boardType, postId]);\n\n  // 필요할 때 데이터 새로고침\n  useEffect(() => {\n    if (isRefreshing) {\n      fetchPostAndComments();\n      setIsRefreshing(false);\n    }\n  }, [isRefreshing]);\n\n  const checkEditDeletePermission = async (postData) => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    \n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    \n    try {\n      const authorData = await getUser(postData.author.id);\n      const authorAuthority = authorData && authorData.authority ? \n        parseInt(authorData.authority) : 0;\n\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n\n  const canModifyComment = (comment) => {\n    if (!localStorage.getItem('authToken')) return false;\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    const commentAuthorId = comment.author.id || comment.author;\n    const commentAuthorAuthority = comment.author.authority || 0;\n    \n    return commentAuthorId === currentUserId || currentUserAuthority > commentAuthorAuthority;\n  };\n\n  // 댓글 작성 핸들러 - 게시글 데이터도 함께 업데이트\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    \n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n\n    const userId = localStorage.getItem('userId');\n    \n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    \n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      \n      console.log(\"댓글 작성 응답:\", response);\n      \n      // 댓글 작성 성공 시 새 댓글을 추가하고 게시글 데이터도 업데이트\n      if (response && response.comment) {\n        const newComment = response.comment;\n        \n        // comments 상태 업데이트\n        setComments(prevComments => [...prevComments, newComment]);\n        \n        // post 상태의 comments 배열도 업데이트\n        setPost(prevPost => ({\n          ...prevPost,\n          comments: [...(prevPost.comments || []), newComment]\n        }));\n        \n        setCommentText('');\n        alert('댓글이 성공적으로 작성되었습니다.');\n      } else {\n        // API 응답에 댓글 정보가 없는 경우 전체 데이터 다시 로드\n        setIsRefreshing(true);\n      }\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditComment = (comment) => {\n    setEditingCommentId(comment.id || comment._id);\n    setEditCommentText(comment.content);\n  };\n\n  const handleCancelEditComment = () => {\n    setEditingCommentId(null);\n    setEditCommentText('');\n  };\n\n  // 댓글 수정 저장 - 게시글 데이터도 함께 업데이트\n  const handleUpdateComment = async (commentId) => {\n    if (!editCommentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      const response = await updateComment(boardType, postId, commentId, {\n        content: editCommentText,\n        id: userId\n      });\n      \n      if (response && response.comment) {\n        const updatedComment = response.comment;\n        \n        // comments 상태 업데이트\n        setComments(prevComments => \n          prevComments.map(c => ((c.id || c._id) === commentId ? updatedComment : c))\n        );\n        \n        // post 상태의 comments 배열도 업데이트\n        setPost(prevPost => ({\n          ...prevPost,\n          comments: (prevPost.comments || []).map(c => \n            ((c.id || c._id) === commentId ? updatedComment : c)\n          )\n        }));\n      } else {\n        // API 응답에 댓글 정보가 없는 경우 전체 데이터 다시 로드\n        setIsRefreshing(true);\n      }\n      \n      setEditingCommentId(null);\n      setEditCommentText('');\n      alert('댓글이 수정되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 수정 오류:\", error);\n      alert(`댓글 수정 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 댓글 삭제 - 게시글 데이터도 함께 업데이트\n  const handleDeleteComment = async (commentId) => {\n    if (!window.confirm('댓글을 삭제하시겠습니까?')) return;\n    \n    try {\n      setLoading(true);\n      const userId = localStorage.getItem('userId');\n      await deleteComment(boardType, postId, commentId, userId);\n      \n      // comments 상태에서 삭제된 댓글 제거\n      setComments(prevComments => \n        prevComments.filter(c => (c.id || c._id) !== commentId)\n      );\n      \n      // post 상태의 comments 배열에서도 삭제된 댓글 제거\n      setPost(prevPost => ({\n        ...prevPost,\n        comments: (prevPost.comments || []).filter(c => \n          (c.id || c._id) !== commentId\n        )\n      }));\n      \n      alert('댓글이 삭제되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 삭제 오류:\", error);\n      alert(`댓글 삭제 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && !post) return <p>게시글을 불러오는 중...</p>;\n  if (error) return <p>오류 발생: {error}</p>;\n  if (!post) return <p>게시글을 찾을 수 없습니다</p>;\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <h1 className=\"post-title\">{post.title}</h1>\n        {canModify && (\n          <div className=\"post-actions\">\n            <button \n              onClick={() => navigate(`/boards/${boardType}/${postId}/edit`)} \n              className=\"action-button edit-button\"\n            >\n              수정\n            </button>\n            <button \n              onClick={handleDelete}\n              className=\"action-button\"\n            >\n              삭제\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"post-meta\">\n        <span className=\"post-author\">\n          <strong>작성자:</strong> {post.author && post.author.id ? post.author.id : '알 수 없음'}\n        </span>\n        <span className=\"post-date\">\n          <strong>작성일:</strong> {new Date(post.createdAt).toLocaleString()}\n          {post.updatedAt && post.updatedAt !== post.createdAt && (\n            <span className=\"update-date\"> \n              (수정일: {new Date(post.updatedAt).toLocaleString()})\n            </span>\n          )}\n        </span>\n        <span className=\"post-views\">\n          <strong>조회수:</strong> {post.viewCount || 0}\n        </span>\n      </div>\n      \n      <hr className=\"post-divider\" />\n\n      <div className=\"post-content\">\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\n      </div>\n\n      <div className=\"comment-section\">\n        <h3>댓글 ({comments.length})</h3>\n        <hr className=\"comment-divider\" />\n        \n        {comments.length > 0 ? (\n          <div className=\"comment-list\">\n            {comments.map((comment, index) => {\n              const commentId = comment.id || comment._id || index;\n              const isEditing = editingCommentId === commentId;\n              const commentDate = new Date(comment.createdAt);\n              \n              const authorId = comment.author && comment.author.id \n                ? comment.author.id \n                : (typeof comment.author === 'string' ? comment.author : '익명');\n              \n              return (\n                <div key={commentId} className=\"comment-item\">\n                  {isEditing ? (\n                    <div className=\"comment-edit-form\">\n                      <textarea\n                        className=\"comment-edit-textarea\"\n                        value={editCommentText}\n                        onChange={(e) => setEditCommentText(e.target.value)}\n                      />\n                      <div className=\"comment-edit-buttons\">\n                        <button onClick={() => handleUpdateComment(commentId)} disabled={loading}>저장</button>\n                        <button onClick={handleCancelEditComment}>취소</button>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"comment-content-wrapper\">\n                      <div className=\"comment-author-info\">\n                        <div className=\"comment-author-id\">{authorId}</div>\n                        <div className=\"comment-date\">\n                          <div>{commentDate.toLocaleDateString()}</div>\n                          <div>{commentDate.toLocaleTimeString()}</div>\n                        </div>\n                      </div>\n                      <div className=\"comment-main\">\n                        <div className=\"comment-text\">{comment.content}</div>\n                        {canModifyComment(comment) && (\n                          <div className=\"comment-actions\">\n                            <button \n                              className=\"comment-action-btn\"\n                              onClick={() => handleEditComment(comment)}\n                            >\n                              수정\n                            </button>\n                            <button \n                              className=\"comment-action-btn\"\n                              onClick={() => handleDeleteComment(commentId)}\n                            >\n                              삭제\n                            </button>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <p className=\"no-comments\">댓글이 없습니다.</p>\n        )}\n        \n        {localStorage.getItem('authToken') ? (\n          <form className=\"comment-form\" onSubmit={handleCommentSubmit}>\n            <textarea \n              placeholder=\"댓글 작성...\" \n              className=\"comment-textarea\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              disabled={loading}\n              required\n            />\n            <button \n              type=\"submit\" \n              className=\"action-button\"\n              disabled={loading}\n            >\n              {loading ? '작성 중...' : '댓글 달기'}\n            </button>\n          </form>\n        ) : (\n          <p className=\"login-message\">댓글을 작성하려면 로그인이 필요합니다.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BoardPostView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}