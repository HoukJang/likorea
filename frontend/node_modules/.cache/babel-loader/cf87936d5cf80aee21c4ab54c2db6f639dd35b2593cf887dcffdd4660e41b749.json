{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BACKEND_URL } from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BoardDetail() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [message, setMessage] = useState('');\n  // Dummy current user info (in real app, decode token or use context)\n  const currentUser = {\n    username: 'currentUser'\n  };\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n        if (!response.ok) throw new Error('게시글 조회 실패');\n        const data = await response.json();\n        setPost(data);\n        setComments(data.comments || []);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPost();\n  }, [boardType, postId]);\n  const handleDeletePost = async () => {\n    try {\n      // DELETE API endpoint is assumed; adjust URL/method as needed.\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) throw new Error('게시글 삭제 실패');\n      // Redirect or update UI upon successful deletion\n      alert('게시글이 삭제되었습니다.');\n      window.location.href = `/boards/${boardType}`;\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!localStorage.getItem('authToken')) {\n      setMessage('로그인 후 댓글 작성이 가능합니다.');\n      return;\n    }\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          comment\n        })\n      });\n      if (!response.ok) throw new Error('댓글 작성 실패');\n      const newComment = await response.json();\n      setComments([...comments, newComment]);\n      setComment('');\n      setMessage('댓글이 작성되었습니다.');\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"0 2rem\"\n    },\n    children: [\"  \", post ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), localStorage.getItem('userEmail') === post.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"1rem 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: `/boards/${boardType}/${postId}/edit`,\n          style: {\n            marginRight: '1rem'\n          },\n          children: \"[\\uC218\\uC815]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeletePost,\n          children: \"[\\uC0AD\\uC81C]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n            .post-content {\n              display: flex;\n              align-items: center;\n            }\n            .post-content img {\n              display: inline; /* 필요에 따라 inline-block 사용 가능 */\n              vertical-align: middle; /* 이미지 정렬을 개선합니다 */\n              max-width: 100%;\n              margin: 0;\n            }\n          `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            margin: \"1rem 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map(c => {\n            console.log(\"Comment author:\", c.author, \"Logged in user:\", localStorage.getItem('userEmail'));\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: c.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), localStorage.getItem('userEmail') === c.author &&\n              /*#__PURE__*/\n              // now comparing logged in user's email with comment author\n              _jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  children: \"[\\uC218\\uC815]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  style: {\n                    marginLeft: '1rem'\n                  },\n                  children: \"[\\uC0AD\\uC81C]\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, c.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), localStorage.getItem('authToken') ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            style: {\n              width: \"100%\",\n              height: \"100px\",\n              fontSize: \"1.2rem\"\n            } // reduced height to 150px\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\uB313\\uAE00 \\uC791\\uC131\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uB313\\uAE00 \\uC791\\uC131\\uC774 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardDetail, \"87zWLof+HdaX2nRYgY1MacQhaEU=\", false, function () {\n  return [useParams];\n});\n_c = BoardDetail;\nexport default BoardDetail;\nvar _c;\n$RefreshReg$(_c, \"BoardDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","BACKEND_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardDetail","_s","boardType","postId","post","setPost","comment","setComment","comments","setComments","message","setMessage","currentUser","username","fetchPost","response","fetch","ok","Error","data","json","error","console","handleDeletePost","method","headers","alert","window","location","href","handleCommentSubmit","e","preventDefault","localStorage","getItem","body","JSON","stringify","newComment","style","margin","children","title","fileName","_jsxFileName","lineNumber","columnNumber","email","marginRight","onClick","className","dangerouslySetInnerHTML","__html","content","map","c","log","author","text","marginLeft","id","onSubmit","value","onChange","target","placeholder","width","height","fontSize","type","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardDetail.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { BACKEND_URL } from '../config';\n\nfunction BoardDetail() {\n  const { boardType, postId } = useParams();\n  const [post, setPost] = useState(null);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [message, setMessage] = useState('');\n  // Dummy current user info (in real app, decode token or use context)\n  const currentUser = { username: 'currentUser' };\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`);\n        if (!response.ok) throw new Error('게시글 조회 실패');\n        const data = await response.json();\n        setPost(data);\n        setComments(data.comments || []);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchPost();\n  }, [boardType, postId]);\n\n  const handleDeletePost = async () => {\n    try {\n      // DELETE API endpoint is assumed; adjust URL/method as needed.\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}`, {\n        method: 'DELETE',\n        headers: { 'Content-Type': 'application/json' }\n      });\n      if (!response.ok) throw new Error('게시글 삭제 실패');\n      // Redirect or update UI upon successful deletion\n      alert('게시글이 삭제되었습니다.');\n      window.location.href = `/boards/${boardType}`;\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    if (!localStorage.getItem('authToken')) {\n      setMessage('로그인 후 댓글 작성이 가능합니다.');\n      return;\n    }\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/boards/${boardType}/${postId}/comments`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ comment })\n      });\n      if (!response.ok) throw new Error('댓글 작성 실패');\n      const newComment = await response.json();\n      setComments([...comments, newComment]);\n      setComment('');\n      setMessage('댓글이 작성되었습니다.');\n    } catch (error) {\n      setMessage(error.message);\n    }\n  };\n\n  return (\n    <div style={{ margin: \"0 2rem\" }}>  {/* Added left/right margin */}\n      {post ? (\n        <>\n          <h2>{post.title}</h2>\n          {/* Render post edit/delete buttons if logged-in user's email matches post author's email */}\n          {localStorage.getItem('userEmail') === post.email && (\n            <div style={{ margin: \"1rem 0\" }}>\n              <a href={`/boards/${boardType}/${postId}/edit`} style={{ marginRight: '1rem' }}>[수정]</a>\n              <button onClick={handleDeletePost}>[삭제]</button>\n            </div>\n          )}\n          {/* Updated style: flex display for .post-content added */}\n          <style>{`\n            .post-content {\n              display: flex;\n              align-items: center;\n            }\n            .post-content img {\n              display: inline; /* 필요에 따라 inline-block 사용 가능 */\n              vertical-align: middle; /* 이미지 정렬을 개선합니다 */\n              max-width: 100%;\n              margin: 0;\n            }\n          `}</style>\n          <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: post.content }} />\n          <section>\n            {/* Replace comment title with a horizontal line */}\n            <hr style={{ margin: \"1rem 0\" }} />\n            <ul>\n              {comments.map(c => {\n                console.log(\"Comment author:\", c.author, \"Logged in user:\", localStorage.getItem('userEmail'));\n                return (\n                  <li key={c.id}>\n                    <p>{c.text}</p>\n                    {localStorage.getItem('userEmail') === c.author && ( // now comparing logged in user's email with comment author\n                      <>\n                        <a href=\"#\">[수정]</a>\n                        {/* 혹은 삭제 버튼도 추가 가능 */}\n                        <a href=\"#\" style={{ marginLeft: '1rem' }}>[삭제]</a>\n                      </>\n                    )}\n                  </li>\n                );\n              })}\n            </ul>\n            {localStorage.getItem('authToken') ? (\n              <form onSubmit={handleCommentSubmit}>\n                <textarea \n                  value={comment}\n                  onChange={(e) => setComment(e.target.value)}\n                  placeholder=\"댓글을 입력하세요\"\n                  style={{ width: \"100%\", height: \"100px\", fontSize: \"1.2rem\" }} // reduced height to 150px\n                />\n                <button type=\"submit\">댓글 작성</button>\n              </form>\n            ) : (\n              <p>로그인 후 댓글 작성이 가능합니다.</p>\n            )}\n            {message && <p>{message}</p>}\n          </section>\n        </>\n      ) : (\n        <p>게시글을 불러오는 중...</p>\n      )}\n    </div>\n  );\n}\n\nexport default BoardDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}