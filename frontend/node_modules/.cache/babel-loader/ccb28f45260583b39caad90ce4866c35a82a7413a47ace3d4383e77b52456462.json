{"ast":null,"code":"var _jsxFileName = \"/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardPostView() {\n  _s();\n  const {\n    boardType,\n    postId\n  } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n\n  // 게시글 불러오기\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트, 게시글 불러오기 시작\");\n    async function fetchPost() {\n      setLoading(true);\n      try {\n        console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n        const data = await getBoardPost(boardType, postId);\n        console.log(\"게시글 데이터 응답:\", data);\n        setPost(data);\n\n        // 댓글 데이터 저장\n        if (data.comments && Array.isArray(data.comments)) {\n          setComments(data.comments);\n          console.log(`댓글 ${data.comments.length}개 로드됨`);\n        }\n\n        // 게시글을 가져온 후 권한 검사 실행\n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n\n  // 권한 확인 함수\n  const checkEditDeletePermission = async postData => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n\n    // 작성자와 현재 로그인한 사용자가 같은 경우\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n\n    // 같은 사용자라면 바로 권한 부여\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    try {\n      // 작성자 정보 비동기로 가져오기\n      const authorData = await getUser(postData.author.id);\n\n      // 작성자의 권한 확인 (없으면 0으로 취급)\n      const authorAuthority = authorData && authorData.authority ? parseInt(authorData.authority) : 0;\n\n      // 현재 사용자의 권한이 작성자보다 높을 때 수정/삭제 가능\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n\n  // 댓글 작성 핸들러\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      console.log(\"댓글 작성 응답:\", response);\n\n      // 댓글 작성 성공 후 게시글 정보를 다시 가져오거나 응답에서 댓글 정보를 추출하여 상태 업데이트\n      if (response && response.comment) {\n        // 새로운 댓글 추가\n        setComments(prev => [...prev, response.comment]);\n      } else {\n        // 서버에서 새로운 데이터 가져오기\n        const updatedPost = await getBoardPost(boardType, postId);\n        setPost(updatedPost);\n        setComments(updatedPost.comments || []);\n      }\n\n      // 입력 필드 초기화\n      setCommentText('');\n      alert('댓글이 성공적으로 작성되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading && !post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 32\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uC624\\uB958 \\uBC1C\\uC0DD: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 21\n  }, this);\n  if (!post) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"post-title\",\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), canModify && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(`/boards/${boardType}/${postId}/edit`),\n          className: \"action-button edit-button\",\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"action-button\",\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-author\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC790:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), \" \", post.author && post.author.id ? post.author.id : '알 수 없음']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC791\\uC131\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), \" \", new Date(post.createdAt).toLocaleString(), post.updatedAt && post.updatedAt !== post.createdAt && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"update-date\",\n          children: [\"(\\uC218\\uC815\\uC77C: \", new Date(post.updatedAt).toLocaleString(), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"post-views\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uC870\\uD68C\\uC218:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), \" \", post.viewCount || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"post-divider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: post.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uB313\\uAE00 (\", comments.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"comment-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-author\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: comment.author && comment.author.id ? comment.author.id : typeof comment.author === 'string' ? comment.author : '익명'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-date\",\n              children: new Date(comment.createdAt).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-content\",\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, comment._id || comment.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"\\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), localStorage.getItem('authToken') ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"comment-form\",\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uB313\\uAE00 \\uC791\\uC131...\",\n          className: \"comment-textarea\",\n          value: commentText,\n          onChange: e => setCommentText(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"action-button\",\n          disabled: loading,\n          children: loading ? '작성 중...' : '댓글 달기'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-message\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(BoardPostView, \"HvqXzFXlHjD20e+XOTaVacGDp44=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = BoardPostView;\nexport default BoardPostView;\nvar _c;\n$RefreshReg$(_c, \"BoardPostView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","getBoardPost","deleteBoard","getUser","addComment","jsxDEV","_jsxDEV","BoardPostView","_s","boardType","postId","navigate","post","setPost","canModify","setCanModify","commentText","setCommentText","loading","setLoading","error","setError","comments","setComments","console","log","fetchPost","data","Array","isArray","length","checkEditDeletePermission","message","postData","localStorage","getItem","currentUserId","currentUserAuthority","parseInt","isSameUser","author","id","authorData","authorAuthority","authority","handleDelete","window","confirm","userId","alert","handleCommentSubmit","e","preventDefault","trim","content","response","comment","prev","updatedPost","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onClick","Date","createdAt","toLocaleString","updatedAt","viewCount","dangerouslySetInnerHTML","__html","map","index","_id","onSubmit","placeholder","value","onChange","target","disabled","required","type","_c","$RefreshReg$"],"sources":["/Users/houkjang/likorea/frontend/src/components/BoardPostView.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { getBoardPost, deleteBoard, getUser, addComment } from '../api/boards';\nimport '../styles/BoardPostView.css';\n\nfunction BoardPostView() {\n  const { boardType, postId } = useParams();\n  const navigate = useNavigate();\n  const [post, setPost] = useState(null);\n  const [canModify, setCanModify] = useState(false);\n  const [commentText, setCommentText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [comments, setComments] = useState([]);\n\n  // 게시글 불러오기\n  useEffect(() => {\n    console.log(\"BoardPostView 컴포넌트 마운트, 게시글 불러오기 시작\");\n    \n    async function fetchPost() {\n      setLoading(true);\n      try {\n        console.log(`게시글 데이터 요청: boardType=${boardType}, postId=${postId}`);\n        const data = await getBoardPost(boardType, postId);\n        console.log(\"게시글 데이터 응답:\", data);\n        setPost(data);\n        \n        // 댓글 데이터 저장\n        if (data.comments && Array.isArray(data.comments)) {\n          setComments(data.comments);\n          console.log(`댓글 ${data.comments.length}개 로드됨`);\n        }\n        \n        // 게시글을 가져온 후 권한 검사 실행\n        checkEditDeletePermission(data);\n      } catch (error) {\n        console.error(\"게시글 조회 오류:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, [boardType, postId]);\n\n  // 권한 확인 함수\n  const checkEditDeletePermission = async (postData) => {\n    if (!postData || !localStorage.getItem('authToken')) {\n      setCanModify(false);\n      return;\n    }\n    \n    const currentUserId = localStorage.getItem('userId');\n    const currentUserAuthority = parseInt(localStorage.getItem('userAuthority') || '0');\n    \n    // 작성자와 현재 로그인한 사용자가 같은 경우\n    const isSameUser = postData.author && postData.author.id === currentUserId;\n    \n    // 같은 사용자라면 바로 권한 부여\n    if (isSameUser) {\n      setCanModify(true);\n      return;\n    }\n    \n    try {\n      // 작성자 정보 비동기로 가져오기\n      const authorData = await getUser(postData.author.id);\n      \n      // 작성자의 권한 확인 (없으면 0으로 취급)\n      const authorAuthority = authorData && authorData.authority ? \n        parseInt(authorData.authority) : 0;\n\n      \n      // 현재 사용자의 권한이 작성자보다 높을 때 수정/삭제 가능\n      setCanModify(currentUserAuthority > authorAuthority);\n    } catch (error) {\n      console.error(\"작성자 정보 조회 실패:\", error);\n      setCanModify(false);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      try {\n        const userId = localStorage.getItem('userId');\n        await deleteBoard(boardType, postId, userId);\n        navigate(`/boards/${boardType}`);\n      } catch (error) {\n        console.error(\"게시글 삭제 실패:\", error);\n        alert(\"삭제 권한이 없거나 오류가 발생했습니다.\");\n      }\n    }\n  };\n\n  // 댓글 작성 핸들러\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!commentText.trim()) {\n      alert('댓글 내용을 입력해주세요.');\n      return;\n    }\n    \n    if (!localStorage.getItem('authToken')) {\n      alert('로그인 후 댓글을 작성할 수 있습니다.');\n      return;\n    }\n\n    const userId = localStorage.getItem('userId');\n    \n    console.log(\"댓글 작성 요청:\", {\n      content: commentText,\n      id: userId,\n      boardType,\n      postId\n    });\n    \n    try {\n      setLoading(true);\n      const response = await addComment(boardType, postId, {\n        content: commentText,\n        id: userId\n      });\n      \n      console.log(\"댓글 작성 응답:\", response);\n      \n      // 댓글 작성 성공 후 게시글 정보를 다시 가져오거나 응답에서 댓글 정보를 추출하여 상태 업데이트\n      if (response && response.comment) {\n        // 새로운 댓글 추가\n        setComments(prev => [...prev, response.comment]);\n      } else {\n        // 서버에서 새로운 데이터 가져오기\n        const updatedPost = await getBoardPost(boardType, postId);\n        setPost(updatedPost);\n        setComments(updatedPost.comments || []);\n      }\n      \n      // 입력 필드 초기화\n      setCommentText('');\n      \n      alert('댓글이 성공적으로 작성되었습니다.');\n    } catch (error) {\n      console.error(\"댓글 작성 오류:\", error);\n      alert(`댓글 작성 실패: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading && !post) return <p>게시글을 불러오는 중...</p>;\n  if (error) return <p>오류 발생: {error}</p>;\n  if (!post) return <p>게시글을 찾을 수 없습니다</p>;\n\n  return (\n    <div className=\"post-container\">\n      <div className=\"post-header\">\n        <h1 className=\"post-title\">{post.title}</h1>\n        {canModify && (\n          <div className=\"post-actions\">\n            <button \n              onClick={() => navigate(`/boards/${boardType}/${postId}/edit`)} \n              className=\"action-button edit-button\"\n            >\n              수정\n            </button>\n            <button \n              onClick={handleDelete}\n              className=\"action-button\"\n            >\n              삭제\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"post-meta\">\n        <span className=\"post-author\">\n          <strong>작성자:</strong> {post.author && post.author.id ? post.author.id : '알 수 없음'}\n        </span>\n        <span className=\"post-date\">\n          <strong>작성일:</strong> {new Date(post.createdAt).toLocaleString()}\n          {post.updatedAt && post.updatedAt !== post.createdAt && (\n            <span className=\"update-date\"> \n              (수정일: {new Date(post.updatedAt).toLocaleString()})\n            </span>\n          )}\n        </span>\n        <span className=\"post-views\">\n          <strong>조회수:</strong> {post.viewCount || 0}\n        </span>\n      </div>\n      \n      <hr className=\"post-divider\" />\n\n      <div className=\"post-content\">\n        <div dangerouslySetInnerHTML={{ __html: post.content }} />\n      </div>\n\n      <div className=\"comment-section\">\n        <h3>댓글 ({comments.length})</h3>\n        <hr className=\"comment-divider\" />\n        \n        {comments.length > 0 ? (\n          <div className=\"comment-list\">\n            {comments.map((comment, index) => (\n              <div key={comment._id || comment.id || index} className=\"comment-item\">\n                <div className=\"comment-header\">\n                  <span className=\"comment-author\">\n                    <strong>\n                      {comment.author && comment.author.id \n                        ? comment.author.id \n                        : (typeof comment.author === 'string' ? comment.author : '익명')}\n                    </strong>\n                  </span>\n                  <span className=\"comment-date\">\n                    {new Date(comment.createdAt).toLocaleString()}\n                  </span>\n                </div>\n                <div className=\"comment-content\">\n                  {comment.content}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"no-comments\">댓글이 없습니다.</p>\n        )}\n        \n        {localStorage.getItem('authToken') ? (\n          <form className=\"comment-form\" onSubmit={handleCommentSubmit}>\n            <textarea \n              placeholder=\"댓글 작성...\" \n              className=\"comment-textarea\"\n              value={commentText}\n              onChange={(e) => setCommentText(e.target.value)}\n              disabled={loading}\n              required\n            />\n            <button \n              type=\"submit\" \n              className=\"action-button\"\n              disabled={loading}\n            >\n              {loading ? '작성 중...' : '댓글 달기'}\n            </button>\n          </form>\n        ) : (\n          <p className=\"login-message\">댓글을 작성하려면 로그인이 필요합니다.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BoardPostView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}