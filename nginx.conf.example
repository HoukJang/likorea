# Nginx Configuration Example for likorea.com
# This file shows recommended Nginx settings for production deployment
# Copy to /etc/nginx/sites-available/likorea.com and customize as needed

server {
    listen 80;
    listen [::]:80;
    server_name likorea.com www.likorea.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name likorea.com www.likorea.com;

    # SSL configuration (managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/likorea.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/likorea.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json image/svg+xml;

    # Maximum upload size (matching Express configuration)
    client_max_body_size 10M;

    # Root directory for static files
    root /path/to/likorea/frontend/build;
    index index.html;

    # Static asset caching
    # Cache images for 1 year
    location ~* \.(jpg|jpeg|png|gif|ico|webp|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # Cache CSS and JS for 1 year (with hash in filename)
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
    }

    # Cache fonts for 1 year
    location ~* \.(woff|woff2|ttf|otf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # Service worker - no cache
    location = /service-worker.js {
        expires off;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Manifest files - short cache
    location ~* \.(json|webmanifest)$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # API proxy to backend
    location /api {
        proxy_pass http://localhost:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts for large file uploads
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        send_timeout 300;
    }

    # React app - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # HTML files - no cache to ensure updates are reflected
        location ~ \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://likorea.com;" always;

    # Logs
    access_log /var/log/nginx/likorea.access.log;
    error_log /var/log/nginx/likorea.error.log;
}